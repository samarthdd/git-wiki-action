# This is a basic workflow to help you get started with Actions

name: Auto tagging and release1

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches:
      - master
      - develop
    types: [closed]
    paths-ignore:
      - '.github/workflows/auto_tagging.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          submodules: recursive
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Form tag name
        id: tagging
        run: |
          git config user.name github-actions@github.com
          git config user.email github-actions
          git config --global http.postBuffer 1048576000
          git fetch --tags
          
          tags=$(git tag -l)
          
          if [ -z "$tags" ]; then
            latest_tag="v0.0.0"
          else
            repo_name=$(git config --get remote.origin.url | sed 's/.*\/\([^ ]*\/[^.]*\).*/\1/')
            latest_tag=$(curl -sL https://api.github.com/repos/$repo_name/tags | jq -r ".[0].name")
          fi
          latest_tag1=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "previous latest tag : $latest_tag"
          echo " latest tag : $latest_tag1"
